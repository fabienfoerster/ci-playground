name: RC

on:
  push:
    tags:
      - v*.*.*
jobs:
  gh-auto-release-note:
    runs-on: ubuntu-20.04
    outputs:
      version: ${{ steps.current.outputs.tag }}
      previous: ${{ steps.previous.outputs.previous}}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: extract
        run: |
          echo "cur_version=${GITHUB_REF##*/v}" >> $GITHUB_OUTPUT
          echo "cur_tag=${{github.ref_name}}" >> $GITHUB_OUTPUT
          echo "prev_tag=$(git describe --abbrev=0 --match='v*' --tags HEAD~)" >> $GITHUB_OUTPUT
      - name: Create release note content
        id: rn_content
        run: >-
          echo "rn_content=$(gh api
          --method POST
          -H "Accept: application/vnd.github+json"
          /repos/${{ github.repository}}/releases/generate-notes
          -f tag_name='${{steps.extract.outputs.cur_tag}}'
          -f previous_tag_name='${{steps.extract.outputs.prev_tag}}')" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Create release note
        run: >-
          gh api
          --method POST
          -H "Accept: application/vnd.github+json"
          /repos/${{ github.repository}}/releases
          -f tag_name='${{steps.extract.outputs.cur_tag}}'
          -f name='${{fromJson(steps.rn_content.outputs.rn_content).name}}'
          -f prerelease=${{contains(steps.extract.outputs.cur_tag,'beta') == 'true'}}
          -f make_latest=${{!contains(steps.extract.outputs.cur_tag,'beta')}}
          -f body="${{fromJson(steps.rn_content.outputs.rn_content).body}}"
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
